#ifndef MATERIA_SOURCE_HPP
#define MATERIA_SOURCE_HPP

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////////INCLUDE//////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "header.hpp"

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////CLASSES///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#define STORAGE_VOLUME 4

class	MateriaSource : public IMateriaSource
{
	public:
		MateriaSource( void );
		MateriaSource( const MateriaSource &other );
		MateriaSource &operator = ( const MateriaSource &other );
		~MateriaSource( void );

		virtual void		learnMateria(AMateria *);
		virtual AMateria *createMateria(const std::string &type);


	private:
		AMateria	*_storage[STORAGE_VOLUME];
		int			_usedStorage;
};

#endif
